
f446re_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006d0  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000894  08000894  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000894  08000894  00002004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000894  08000894  00002004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000894  08000894  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08000894  08000894  00001894  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800089c  0800089c  0000189c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  080008a0  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b4  20000004  080008a4  00002004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001b8  080008a4  000021b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a42  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c6  00000000  00000000  00002a76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00002d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000085  00000000  00000000  00002e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000019ee  00000000  00000000  00002e85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ee8  00000000  00000000  00004873  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000062c1  00000000  00000000  0000575b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000ba1c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000003e0  00000000  00000000  0000ba60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  0000be40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000004 	.word	0x20000004
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800087c 	.word	0x0800087c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000008 	.word	0x20000008
 8000200:	0800087c 	.word	0x0800087c

08000204 <delay>:

#define LOW 1
#define BTN_PRESSED LOW

void delay(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a04      	ldr	r2, [pc, #16]	@ (800022c <delay+0x28>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	bf00      	nop
 8000222:	370c      	adds	r7, #12
 8000224:	46bd      	mov	sp, r7
 8000226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022a:	4770      	bx	lr
 800022c:	0003d08f 	.word	0x0003d08f

08000230 <main>:

int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000236:	4b1a      	ldr	r3, [pc, #104]	@ (80002a0 <main+0x70>)
 8000238:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800023a:	2305      	movs	r3, #5
 800023c:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023e:	2301      	movs	r3, #1
 8000240:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000242:	2302      	movs	r3, #2
 8000244:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000246:	2300      	movs	r3, #0
 8000248:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800024a:	2300      	movs	r3, #0
 800024c:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	4813      	ldr	r0, [pc, #76]	@ (80002a0 <main+0x70>)
 8000252:	f000 f853 	bl	80002fc <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000256:	f107 030c 	add.w	r3, r7, #12
 800025a:	4618      	mov	r0, r3
 800025c:	f000 f8c6 	bl	80003ec <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOC;
 8000260:	4b10      	ldr	r3, [pc, #64]	@ (80002a4 <main+0x74>)
 8000262:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000264:	230d      	movs	r3, #13
 8000266:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000268:	2300      	movs	r3, #0
 800026a:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026c:	2302      	movs	r3, #2
 800026e:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000270:	2300      	movs	r3, #0
 8000272:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC,ENABLE);
 8000274:	2101      	movs	r1, #1
 8000276:	480b      	ldr	r0, [pc, #44]	@ (80002a4 <main+0x74>)
 8000278:	f000 f840 	bl	80002fc <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 800027c:	463b      	mov	r3, r7
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f8b4 	bl	80003ec <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOC,GPIO_PIN_NO_13) == BTN_PRESSED)
 8000284:	210d      	movs	r1, #13
 8000286:	4807      	ldr	r0, [pc, #28]	@ (80002a4 <main+0x74>)
 8000288:	f000 fa42 	bl	8000710 <GPIO_ReadFromInputPin>
 800028c:	4603      	mov	r3, r0
 800028e:	2b01      	cmp	r3, #1
 8000290:	d1f8      	bne.n	8000284 <main+0x54>
		{
			delay();
 8000292:	f7ff ffb7 	bl	8000204 <delay>
			GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_5);
 8000296:	2105      	movs	r1, #5
 8000298:	4801      	ldr	r0, [pc, #4]	@ (80002a0 <main+0x70>)
 800029a:	f000 fa4f 	bl	800073c <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOC,GPIO_PIN_NO_13) == BTN_PRESSED)
 800029e:	e7f1      	b.n	8000284 <main+0x54>
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020800 	.word	0x40020800

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	@ (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b0:	480c      	ldr	r0, [pc, #48]	@ (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b2:	490d      	ldr	r1, [pc, #52]	@ (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b4:	4a0d      	ldr	r2, [pc, #52]	@ (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b8:	e002      	b.n	80002c0 <LoopCopyDataInit>

080002ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002be:	3304      	adds	r3, #4

080002c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c4:	d3f9      	bcc.n	80002ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c6:	4a0a      	ldr	r2, [pc, #40]	@ (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c8:	4c0a      	ldr	r4, [pc, #40]	@ (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002cc:	e001      	b.n	80002d2 <LoopFillZerobss>

080002ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d0:	3204      	adds	r2, #4

080002d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d4:	d3fb      	bcc.n	80002ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 fa47 	bl	8000768 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ffa9 	bl	8000230 <main>

080002de <LoopForever>:

LoopForever:
  b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80002ec:	080008a0 	.word	0x080008a0
  ldr r2, =_sbss
 80002f0:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80002f4:	200001b8 	.word	0x200001b8

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	460b      	mov	r3, r1
 8000306:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000308:	78fb      	ldrb	r3, [r7, #3]
 800030a:	2b01      	cmp	r3, #1
 800030c:	d156      	bne.n	80003bc <GPIO_PeriClockControl+0xc0>
	{
		if(pGPIOx == GPIOA)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a2d      	ldr	r2, [pc, #180]	@ (80003c8 <GPIO_PeriClockControl+0xcc>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000316:	4b2d      	ldr	r3, [pc, #180]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031a:	4a2c      	ldr	r2, [pc, #176]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	@ 0x30
	else
	{
		//TODO
	}

}
 8000322:	e04b      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOB)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a2a      	ldr	r2, [pc, #168]	@ (80003d0 <GPIO_PeriClockControl+0xd4>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800032c:	4b27      	ldr	r3, [pc, #156]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000330:	4a26      	ldr	r2, [pc, #152]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000332:	f043 0302 	orr.w	r3, r3, #2
 8000336:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000338:	e040      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOC)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a25      	ldr	r2, [pc, #148]	@ (80003d4 <GPIO_PeriClockControl+0xd8>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000342:	4b22      	ldr	r3, [pc, #136]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000346:	4a21      	ldr	r2, [pc, #132]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000348:	f043 0304 	orr.w	r3, r3, #4
 800034c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034e:	e035      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOD)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a21      	ldr	r2, [pc, #132]	@ (80003d8 <GPIO_PeriClockControl+0xdc>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000358:	4b1c      	ldr	r3, [pc, #112]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800035c:	4a1b      	ldr	r2, [pc, #108]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000364:	e02a      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOE)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a1c      	ldr	r2, [pc, #112]	@ (80003dc <GPIO_PeriClockControl+0xe0>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800036e:	4b17      	ldr	r3, [pc, #92]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000372:	4a16      	ldr	r2, [pc, #88]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000374:	f043 0310 	orr.w	r3, r3, #16
 8000378:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037a:	e01f      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOF)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a18      	ldr	r2, [pc, #96]	@ (80003e0 <GPIO_PeriClockControl+0xe4>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000384:	4b11      	ldr	r3, [pc, #68]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000388:	4a10      	ldr	r2, [pc, #64]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800038a:	f043 0320 	orr.w	r3, r3, #32
 800038e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000390:	e014      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOG)
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a13      	ldr	r2, [pc, #76]	@ (80003e4 <GPIO_PeriClockControl+0xe8>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800039a:	4b0c      	ldr	r3, [pc, #48]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800039e:	4a0b      	ldr	r2, [pc, #44]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 80003a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003a4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a6:	e009      	b.n	80003bc <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOH)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a0f      	ldr	r2, [pc, #60]	@ (80003e8 <GPIO_PeriClockControl+0xec>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d105      	bne.n	80003bc <GPIO_PeriClockControl+0xc0>
			GPIOH_PCLK_EN();
 80003b0:	4b06      	ldr	r3, [pc, #24]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b4:	4a05      	ldr	r2, [pc, #20]	@ (80003cc <GPIO_PeriClockControl+0xd0>)
 80003b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003ba:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003bc:	bf00      	nop
 80003be:	370c      	adds	r7, #12
 80003c0:	46bd      	mov	sp, r7
 80003c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c6:	4770      	bx	lr
 80003c8:	40020000 	.word	0x40020000
 80003cc:	40023800 	.word	0x40023800
 80003d0:	40020400 	.word	0x40020400
 80003d4:	40020800 	.word	0x40020800
 80003d8:	40020c00 	.word	0x40020c00
 80003dc:	40021000 	.word	0x40021000
 80003e0:	40021400 	.word	0x40021400
 80003e4:	40021800 	.word	0x40021800
 80003e8:	40021c00 	.word	0x40021c00

080003ec <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b086      	sub	sp, #24
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	2101      	movs	r1, #1
 80003fe:	4618      	mov	r0, r3
 8000400:	f7ff ff7c 	bl	80002fc <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	795b      	ldrb	r3, [r3, #5]
 8000408:	2b03      	cmp	r3, #3
 800040a:	d820      	bhi.n	800044e <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	795b      	ldrb	r3, [r3, #5]
 8000410:	461a      	mov	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	005b      	lsls	r3, r3, #1
 8000418:	fa02 f303 	lsl.w	r3, r2, r3
 800041c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	681a      	ldr	r2, [r3, #0]
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	005b      	lsls	r3, r3, #1
 800042a:	2103      	movs	r1, #3
 800042c:	fa01 f303 	lsl.w	r3, r1, r3
 8000430:	43db      	mvns	r3, r3
 8000432:	4619      	mov	r1, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	400a      	ands	r2, r1
 800043a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	6819      	ldr	r1, [r3, #0]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	697a      	ldr	r2, [r7, #20]
 8000448:	430a      	orrs	r2, r1
 800044a:	601a      	str	r2, [r3, #0]
 800044c:	e0c1      	b.n	80005d2 <GPIO_Init+0x1e6>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	795b      	ldrb	r3, [r3, #5]
 8000452:	2b04      	cmp	r3, #4
 8000454:	d117      	bne.n	8000486 <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000456:	4b47      	ldr	r3, [pc, #284]	@ (8000574 <GPIO_Init+0x188>)
 8000458:	68db      	ldr	r3, [r3, #12]
 800045a:	687a      	ldr	r2, [r7, #4]
 800045c:	7912      	ldrb	r2, [r2, #4]
 800045e:	4611      	mov	r1, r2
 8000460:	2201      	movs	r2, #1
 8000462:	408a      	lsls	r2, r1
 8000464:	4611      	mov	r1, r2
 8000466:	4a43      	ldr	r2, [pc, #268]	@ (8000574 <GPIO_Init+0x188>)
 8000468:	430b      	orrs	r3, r1
 800046a:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800046c:	4b41      	ldr	r3, [pc, #260]	@ (8000574 <GPIO_Init+0x188>)
 800046e:	689b      	ldr	r3, [r3, #8]
 8000470:	687a      	ldr	r2, [r7, #4]
 8000472:	7912      	ldrb	r2, [r2, #4]
 8000474:	4611      	mov	r1, r2
 8000476:	2201      	movs	r2, #1
 8000478:	408a      	lsls	r2, r1
 800047a:	43d2      	mvns	r2, r2
 800047c:	4611      	mov	r1, r2
 800047e:	4a3d      	ldr	r2, [pc, #244]	@ (8000574 <GPIO_Init+0x188>)
 8000480:	400b      	ands	r3, r1
 8000482:	6093      	str	r3, [r2, #8]
 8000484:	e035      	b.n	80004f2 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	795b      	ldrb	r3, [r3, #5]
 800048a:	2b05      	cmp	r3, #5
 800048c:	d117      	bne.n	80004be <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048e:	4b39      	ldr	r3, [pc, #228]	@ (8000574 <GPIO_Init+0x188>)
 8000490:	689b      	ldr	r3, [r3, #8]
 8000492:	687a      	ldr	r2, [r7, #4]
 8000494:	7912      	ldrb	r2, [r2, #4]
 8000496:	4611      	mov	r1, r2
 8000498:	2201      	movs	r2, #1
 800049a:	408a      	lsls	r2, r1
 800049c:	4611      	mov	r1, r2
 800049e:	4a35      	ldr	r2, [pc, #212]	@ (8000574 <GPIO_Init+0x188>)
 80004a0:	430b      	orrs	r3, r1
 80004a2:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a4:	4b33      	ldr	r3, [pc, #204]	@ (8000574 <GPIO_Init+0x188>)
 80004a6:	68db      	ldr	r3, [r3, #12]
 80004a8:	687a      	ldr	r2, [r7, #4]
 80004aa:	7912      	ldrb	r2, [r2, #4]
 80004ac:	4611      	mov	r1, r2
 80004ae:	2201      	movs	r2, #1
 80004b0:	408a      	lsls	r2, r1
 80004b2:	43d2      	mvns	r2, r2
 80004b4:	4611      	mov	r1, r2
 80004b6:	4a2f      	ldr	r2, [pc, #188]	@ (8000574 <GPIO_Init+0x188>)
 80004b8:	400b      	ands	r3, r1
 80004ba:	60d3      	str	r3, [r2, #12]
 80004bc:	e019      	b.n	80004f2 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	795b      	ldrb	r3, [r3, #5]
 80004c2:	2b06      	cmp	r3, #6
 80004c4:	d115      	bne.n	80004f2 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c6:	4b2b      	ldr	r3, [pc, #172]	@ (8000574 <GPIO_Init+0x188>)
 80004c8:	689b      	ldr	r3, [r3, #8]
 80004ca:	687a      	ldr	r2, [r7, #4]
 80004cc:	7912      	ldrb	r2, [r2, #4]
 80004ce:	4611      	mov	r1, r2
 80004d0:	2201      	movs	r2, #1
 80004d2:	408a      	lsls	r2, r1
 80004d4:	4611      	mov	r1, r2
 80004d6:	4a27      	ldr	r2, [pc, #156]	@ (8000574 <GPIO_Init+0x188>)
 80004d8:	430b      	orrs	r3, r1
 80004da:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004dc:	4b25      	ldr	r3, [pc, #148]	@ (8000574 <GPIO_Init+0x188>)
 80004de:	68db      	ldr	r3, [r3, #12]
 80004e0:	687a      	ldr	r2, [r7, #4]
 80004e2:	7912      	ldrb	r2, [r2, #4]
 80004e4:	4611      	mov	r1, r2
 80004e6:	2201      	movs	r2, #1
 80004e8:	408a      	lsls	r2, r1
 80004ea:	4611      	mov	r1, r2
 80004ec:	4a21      	ldr	r2, [pc, #132]	@ (8000574 <GPIO_Init+0x188>)
 80004ee:	430b      	orrs	r3, r1
 80004f0:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	791b      	ldrb	r3, [r3, #4]
 80004f6:	089b      	lsrs	r3, r3, #2
 80004f8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	f003 0303 	and.w	r3, r3, #3
 8000502:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	4a1b      	ldr	r2, [pc, #108]	@ (8000578 <GPIO_Init+0x18c>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d044      	beq.n	8000598 <GPIO_Init+0x1ac>
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	4a1a      	ldr	r2, [pc, #104]	@ (800057c <GPIO_Init+0x190>)
 8000514:	4293      	cmp	r3, r2
 8000516:	d02b      	beq.n	8000570 <GPIO_Init+0x184>
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	4a18      	ldr	r2, [pc, #96]	@ (8000580 <GPIO_Init+0x194>)
 800051e:	4293      	cmp	r3, r2
 8000520:	d024      	beq.n	800056c <GPIO_Init+0x180>
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	4a17      	ldr	r2, [pc, #92]	@ (8000584 <GPIO_Init+0x198>)
 8000528:	4293      	cmp	r3, r2
 800052a:	d01d      	beq.n	8000568 <GPIO_Init+0x17c>
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4a15      	ldr	r2, [pc, #84]	@ (8000588 <GPIO_Init+0x19c>)
 8000532:	4293      	cmp	r3, r2
 8000534:	d016      	beq.n	8000564 <GPIO_Init+0x178>
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	4a14      	ldr	r2, [pc, #80]	@ (800058c <GPIO_Init+0x1a0>)
 800053c:	4293      	cmp	r3, r2
 800053e:	d00f      	beq.n	8000560 <GPIO_Init+0x174>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a12      	ldr	r2, [pc, #72]	@ (8000590 <GPIO_Init+0x1a4>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d008      	beq.n	800055c <GPIO_Init+0x170>
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	4a11      	ldr	r2, [pc, #68]	@ (8000594 <GPIO_Init+0x1a8>)
 8000550:	4293      	cmp	r3, r2
 8000552:	d101      	bne.n	8000558 <GPIO_Init+0x16c>
 8000554:	2307      	movs	r3, #7
 8000556:	e020      	b.n	800059a <GPIO_Init+0x1ae>
 8000558:	2300      	movs	r3, #0
 800055a:	e01e      	b.n	800059a <GPIO_Init+0x1ae>
 800055c:	2306      	movs	r3, #6
 800055e:	e01c      	b.n	800059a <GPIO_Init+0x1ae>
 8000560:	2305      	movs	r3, #5
 8000562:	e01a      	b.n	800059a <GPIO_Init+0x1ae>
 8000564:	2304      	movs	r3, #4
 8000566:	e018      	b.n	800059a <GPIO_Init+0x1ae>
 8000568:	2303      	movs	r3, #3
 800056a:	e016      	b.n	800059a <GPIO_Init+0x1ae>
 800056c:	2302      	movs	r3, #2
 800056e:	e014      	b.n	800059a <GPIO_Init+0x1ae>
 8000570:	2301      	movs	r3, #1
 8000572:	e012      	b.n	800059a <GPIO_Init+0x1ae>
 8000574:	40013c00 	.word	0x40013c00
 8000578:	40020000 	.word	0x40020000
 800057c:	40020400 	.word	0x40020400
 8000580:	40020800 	.word	0x40020800
 8000584:	40020c00 	.word	0x40020c00
 8000588:	40021000 	.word	0x40021000
 800058c:	40021400 	.word	0x40021400
 8000590:	40021800 	.word	0x40021800
 8000594:	40021c00 	.word	0x40021c00
 8000598:	2300      	movs	r3, #0
 800059a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800059c:	4b59      	ldr	r3, [pc, #356]	@ (8000704 <GPIO_Init+0x318>)
 800059e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80005a0:	4a58      	ldr	r2, [pc, #352]	@ (8000704 <GPIO_Init+0x318>)
 80005a2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80005a6:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80005a8:	7c7a      	ldrb	r2, [r7, #17]
 80005aa:	7cbb      	ldrb	r3, [r7, #18]
 80005ac:	009b      	lsls	r3, r3, #2
 80005ae:	fa02 f103 	lsl.w	r1, r2, r3
 80005b2:	4a55      	ldr	r2, [pc, #340]	@ (8000708 <GPIO_Init+0x31c>)
 80005b4:	7cfb      	ldrb	r3, [r7, #19]
 80005b6:	3302      	adds	r3, #2
 80005b8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005bc:	4b53      	ldr	r3, [pc, #332]	@ (800070c <GPIO_Init+0x320>)
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	687a      	ldr	r2, [r7, #4]
 80005c2:	7912      	ldrb	r2, [r2, #4]
 80005c4:	4611      	mov	r1, r2
 80005c6:	2201      	movs	r2, #1
 80005c8:	408a      	lsls	r2, r1
 80005ca:	4611      	mov	r1, r2
 80005cc:	4a4f      	ldr	r2, [pc, #316]	@ (800070c <GPIO_Init+0x320>)
 80005ce:	430b      	orrs	r3, r1
 80005d0:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	799b      	ldrb	r3, [r3, #6]
 80005d6:	461a      	mov	r2, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	005b      	lsls	r3, r3, #1
 80005de:	fa02 f303 	lsl.w	r3, r2, r3
 80005e2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	689a      	ldr	r2, [r3, #8]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	791b      	ldrb	r3, [r3, #4]
 80005ee:	005b      	lsls	r3, r3, #1
 80005f0:	2103      	movs	r1, #3
 80005f2:	fa01 f303 	lsl.w	r3, r1, r3
 80005f6:	43db      	mvns	r3, r3
 80005f8:	4619      	mov	r1, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	400a      	ands	r2, r1
 8000600:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	6899      	ldr	r1, [r3, #8]
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	697a      	ldr	r2, [r7, #20]
 800060e:	430a      	orrs	r2, r1
 8000610:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	79db      	ldrb	r3, [r3, #7]
 8000616:	461a      	mov	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	005b      	lsls	r3, r3, #1
 800061e:	fa02 f303 	lsl.w	r3, r2, r3
 8000622:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	68da      	ldr	r2, [r3, #12]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	791b      	ldrb	r3, [r3, #4]
 800062e:	005b      	lsls	r3, r3, #1
 8000630:	2103      	movs	r1, #3
 8000632:	fa01 f303 	lsl.w	r3, r1, r3
 8000636:	43db      	mvns	r3, r3
 8000638:	4619      	mov	r1, r3
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	400a      	ands	r2, r1
 8000640:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	68d9      	ldr	r1, [r3, #12]
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	697a      	ldr	r2, [r7, #20]
 800064e:	430a      	orrs	r2, r1
 8000650:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	7a1b      	ldrb	r3, [r3, #8]
 8000656:	461a      	mov	r2, r3
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	fa02 f303 	lsl.w	r3, r2, r3
 8000660:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	685a      	ldr	r2, [r3, #4]
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	4619      	mov	r1, r3
 800066e:	2301      	movs	r3, #1
 8000670:	408b      	lsls	r3, r1
 8000672:	43db      	mvns	r3, r3
 8000674:	4619      	mov	r1, r3
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	400a      	ands	r2, r1
 800067c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	6859      	ldr	r1, [r3, #4]
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	697a      	ldr	r2, [r7, #20]
 800068a:	430a      	orrs	r2, r1
 800068c:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	795b      	ldrb	r3, [r3, #5]
 8000692:	2b02      	cmp	r3, #2
 8000694:	d131      	bne.n	80006fa <GPIO_Init+0x30e>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	791b      	ldrb	r3, [r3, #4]
 800069a:	08db      	lsrs	r3, r3, #3
 800069c:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	791b      	ldrb	r3, [r3, #4]
 80006a2:	f003 0307 	and.w	r3, r3, #7
 80006a6:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	7c3a      	ldrb	r2, [r7, #16]
 80006ae:	3208      	adds	r2, #8
 80006b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006b4:	7bfb      	ldrb	r3, [r7, #15]
 80006b6:	009b      	lsls	r3, r3, #2
 80006b8:	220f      	movs	r2, #15
 80006ba:	fa02 f303 	lsl.w	r3, r2, r3
 80006be:	43db      	mvns	r3, r3
 80006c0:	4618      	mov	r0, r3
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	7c3a      	ldrb	r2, [r7, #16]
 80006c8:	4001      	ands	r1, r0
 80006ca:	3208      	adds	r2, #8
 80006cc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	7c3a      	ldrb	r2, [r7, #16]
 80006d6:	3208      	adds	r2, #8
 80006d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	7a5b      	ldrb	r3, [r3, #9]
 80006e0:	461a      	mov	r2, r3
 80006e2:	7bfb      	ldrb	r3, [r7, #15]
 80006e4:	009b      	lsls	r3, r3, #2
 80006e6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ea:	4618      	mov	r0, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	7c3a      	ldrb	r2, [r7, #16]
 80006f2:	4301      	orrs	r1, r0
 80006f4:	3208      	adds	r2, #8
 80006f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80006fa:	bf00      	nop
 80006fc:	3718      	adds	r7, #24
 80006fe:	46bd      	mov	sp, r7
 8000700:	bd80      	pop	{r7, pc}
 8000702:	bf00      	nop
 8000704:	40023800 	.word	0x40023800
 8000708:	40013800 	.word	0x40013800
 800070c:	40013c00 	.word	0x40013c00

08000710 <GPIO_ReadFromInputPin>:
 *
 * @Note              -

 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000710:	b480      	push	{r7}
 8000712:	b085      	sub	sp, #20
 8000714:	af00      	add	r7, sp, #0
 8000716:	6078      	str	r0, [r7, #4]
 8000718:	460b      	mov	r3, r1
 800071a:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	691a      	ldr	r2, [r3, #16]
 8000720:	78fb      	ldrb	r3, [r7, #3]
 8000722:	fa22 f303 	lsr.w	r3, r2, r3
 8000726:	b2db      	uxtb	r3, r3
 8000728:	f003 0301 	and.w	r3, r3, #1
 800072c:	73fb      	strb	r3, [r7, #15]

   return value;
 800072e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000730:	4618      	mov	r0, r3
 8000732:	3714      	adds	r7, #20
 8000734:	46bd      	mov	sp, r7
 8000736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800073a:	4770      	bx	lr

0800073c <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800073c:	b480      	push	{r7}
 800073e:	b083      	sub	sp, #12
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
 8000744:	460b      	mov	r3, r1
 8000746:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	695b      	ldr	r3, [r3, #20]
 800074c:	78fa      	ldrb	r2, [r7, #3]
 800074e:	2101      	movs	r1, #1
 8000750:	fa01 f202 	lsl.w	r2, r1, r2
 8000754:	405a      	eors	r2, r3
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	615a      	str	r2, [r3, #20]
}
 800075a:	bf00      	nop
 800075c:	370c      	adds	r7, #12
 800075e:	46bd      	mov	sp, r7
 8000760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000764:	4770      	bx	lr
	...

08000768 <__libc_init_array>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	4d0d      	ldr	r5, [pc, #52]	@ (80007a0 <__libc_init_array+0x38>)
 800076c:	4c0d      	ldr	r4, [pc, #52]	@ (80007a4 <__libc_init_array+0x3c>)
 800076e:	1b64      	subs	r4, r4, r5
 8000770:	10a4      	asrs	r4, r4, #2
 8000772:	2600      	movs	r6, #0
 8000774:	42a6      	cmp	r6, r4
 8000776:	d109      	bne.n	800078c <__libc_init_array+0x24>
 8000778:	4d0b      	ldr	r5, [pc, #44]	@ (80007a8 <__libc_init_array+0x40>)
 800077a:	4c0c      	ldr	r4, [pc, #48]	@ (80007ac <__libc_init_array+0x44>)
 800077c:	f000 f87e 	bl	800087c <_init>
 8000780:	1b64      	subs	r4, r4, r5
 8000782:	10a4      	asrs	r4, r4, #2
 8000784:	2600      	movs	r6, #0
 8000786:	42a6      	cmp	r6, r4
 8000788:	d105      	bne.n	8000796 <__libc_init_array+0x2e>
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000790:	4798      	blx	r3
 8000792:	3601      	adds	r6, #1
 8000794:	e7ee      	b.n	8000774 <__libc_init_array+0xc>
 8000796:	f855 3b04 	ldr.w	r3, [r5], #4
 800079a:	4798      	blx	r3
 800079c:	3601      	adds	r6, #1
 800079e:	e7f2      	b.n	8000786 <__libc_init_array+0x1e>
 80007a0:	08000894 	.word	0x08000894
 80007a4:	08000894 	.word	0x08000894
 80007a8:	08000894 	.word	0x08000894
 80007ac:	0800089c 	.word	0x0800089c

080007b0 <__retarget_lock_acquire_recursive>:
 80007b0:	4770      	bx	lr

080007b2 <__retarget_lock_release_recursive>:
 80007b2:	4770      	bx	lr

080007b4 <register_fini>:
 80007b4:	4b02      	ldr	r3, [pc, #8]	@ (80007c0 <register_fini+0xc>)
 80007b6:	b113      	cbz	r3, 80007be <register_fini+0xa>
 80007b8:	4802      	ldr	r0, [pc, #8]	@ (80007c4 <register_fini+0x10>)
 80007ba:	f000 b805 	b.w	80007c8 <atexit>
 80007be:	4770      	bx	lr
 80007c0:	00000000 	.word	0x00000000
 80007c4:	080007d5 	.word	0x080007d5

080007c8 <atexit>:
 80007c8:	2300      	movs	r3, #0
 80007ca:	4601      	mov	r1, r0
 80007cc:	461a      	mov	r2, r3
 80007ce:	4618      	mov	r0, r3
 80007d0:	f000 b814 	b.w	80007fc <__register_exitproc>

080007d4 <__libc_fini_array>:
 80007d4:	b538      	push	{r3, r4, r5, lr}
 80007d6:	4d07      	ldr	r5, [pc, #28]	@ (80007f4 <__libc_fini_array+0x20>)
 80007d8:	4c07      	ldr	r4, [pc, #28]	@ (80007f8 <__libc_fini_array+0x24>)
 80007da:	1b64      	subs	r4, r4, r5
 80007dc:	10a4      	asrs	r4, r4, #2
 80007de:	b91c      	cbnz	r4, 80007e8 <__libc_fini_array+0x14>
 80007e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007e4:	f000 b850 	b.w	8000888 <_fini>
 80007e8:	3c01      	subs	r4, #1
 80007ea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80007ee:	4798      	blx	r3
 80007f0:	e7f5      	b.n	80007de <__libc_fini_array+0xa>
 80007f2:	bf00      	nop
 80007f4:	0800089c 	.word	0x0800089c
 80007f8:	080008a0 	.word	0x080008a0

080007fc <__register_exitproc>:
 80007fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000800:	f8df a074 	ldr.w	sl, [pc, #116]	@ 8000878 <__register_exitproc+0x7c>
 8000804:	4606      	mov	r6, r0
 8000806:	f8da 0000 	ldr.w	r0, [sl]
 800080a:	4698      	mov	r8, r3
 800080c:	460f      	mov	r7, r1
 800080e:	4691      	mov	r9, r2
 8000810:	f7ff ffce 	bl	80007b0 <__retarget_lock_acquire_recursive>
 8000814:	4b16      	ldr	r3, [pc, #88]	@ (8000870 <__register_exitproc+0x74>)
 8000816:	681c      	ldr	r4, [r3, #0]
 8000818:	b90c      	cbnz	r4, 800081e <__register_exitproc+0x22>
 800081a:	4c16      	ldr	r4, [pc, #88]	@ (8000874 <__register_exitproc+0x78>)
 800081c:	601c      	str	r4, [r3, #0]
 800081e:	6865      	ldr	r5, [r4, #4]
 8000820:	f8da 0000 	ldr.w	r0, [sl]
 8000824:	2d1f      	cmp	r5, #31
 8000826:	dd05      	ble.n	8000834 <__register_exitproc+0x38>
 8000828:	f7ff ffc3 	bl	80007b2 <__retarget_lock_release_recursive>
 800082c:	f04f 30ff 	mov.w	r0, #4294967295
 8000830:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000834:	b19e      	cbz	r6, 800085e <__register_exitproc+0x62>
 8000836:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 800083a:	2201      	movs	r2, #1
 800083c:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 8000840:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 8000844:	40aa      	lsls	r2, r5
 8000846:	4313      	orrs	r3, r2
 8000848:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 800084c:	2e02      	cmp	r6, #2
 800084e:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 8000852:	bf02      	ittt	eq
 8000854:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 8000858:	4313      	orreq	r3, r2
 800085a:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 800085e:	1c6b      	adds	r3, r5, #1
 8000860:	3502      	adds	r5, #2
 8000862:	6063      	str	r3, [r4, #4]
 8000864:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000868:	f7ff ffa3 	bl	80007b2 <__retarget_lock_release_recursive>
 800086c:	2000      	movs	r0, #0
 800086e:	e7df      	b.n	8000830 <__register_exitproc+0x34>
 8000870:	20000024 	.word	0x20000024
 8000874:	20000028 	.word	0x20000028
 8000878:	20000000 	.word	0x20000000

0800087c <_init>:
 800087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087e:	bf00      	nop
 8000880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000882:	bc08      	pop	{r3}
 8000884:	469e      	mov	lr, r3
 8000886:	4770      	bx	lr

08000888 <_fini>:
 8000888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800088a:	bf00      	nop
 800088c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800088e:	bc08      	pop	{r3}
 8000890:	469e      	mov	lr, r3
 8000892:	4770      	bx	lr
