
f446re_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006a4  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000868  08000868  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000868  08000868  00002004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000868  08000868  00002004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000868  08000868  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08000868  08000868  00001868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000870  08000870  00001870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  08000874  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b4  20000004  08000878  00002004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001b8  08000878  000021b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a42  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c6  00000000  00000000  00002a76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00002d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000085  00000000  00000000  00002e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001908  00000000  00000000  00002e85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000eaf  00000000  00000000  0000478d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00006016  00000000  00000000  0000563c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000b652  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000003e0  00000000  00000000  0000b698  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  0000ba78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000004 	.word	0x20000004
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000850 	.word	0x08000850

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000008 	.word	0x20000008
 8000200:	08000850 	.word	0x08000850

08000204 <main>:
{
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
}

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 800020a:	4b19      	ldr	r3, [pc, #100]	@ (8000270 <main+0x6c>)
 800020c:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020e:	2305      	movs	r3, #5
 8000210:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800021a:	2301      	movs	r3, #1
 800021c:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	4813      	ldr	r0, [pc, #76]	@ (8000274 <main+0x70>)
 8000226:	f000 f853 	bl	80002d0 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 800022a:	f107 030c 	add.w	r3, r7, #12
 800022e:	4618      	mov	r0, r3
 8000230:	f000 f8c6 	bl	80003c0 <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOC;
 8000234:	4b10      	ldr	r3, [pc, #64]	@ (8000278 <main+0x74>)
 8000236:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000238:	230d      	movs	r3, #13
 800023a:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800023c:	2300      	movs	r3, #0
 800023e:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000240:	2302      	movs	r3, #2
 8000242:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000244:	2300      	movs	r3, #0
 8000246:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000248:	2101      	movs	r1, #1
 800024a:	4809      	ldr	r0, [pc, #36]	@ (8000270 <main+0x6c>)
 800024c:	f000 f840 	bl	80002d0 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 8000250:	463b      	mov	r3, r7
 8000252:	4618      	mov	r0, r3
 8000254:	f000 f8b4 	bl	80003c0 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) == BTN_PRESSED)
 8000258:	2100      	movs	r1, #0
 800025a:	4805      	ldr	r0, [pc, #20]	@ (8000270 <main+0x6c>)
 800025c:	f000 fa42 	bl	80006e4 <GPIO_ReadFromInputPin>
 8000260:	4603      	mov	r3, r0
 8000262:	2b01      	cmp	r3, #1
 8000264:	d1f8      	bne.n	8000258 <main+0x54>
		{
			//delay();
			GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_5);
 8000266:	2105      	movs	r1, #5
 8000268:	4802      	ldr	r0, [pc, #8]	@ (8000274 <main+0x70>)
 800026a:	f000 fa51 	bl	8000710 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) == BTN_PRESSED)
 800026e:	e7f3      	b.n	8000258 <main+0x54>
 8000270:	40020000 	.word	0x40020000
 8000274:	40020c00 	.word	0x40020c00
 8000278:	40020800 	.word	0x40020800

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	@ (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	@ (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	@ (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	@ (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	@ (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	@ (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 fa47 	bl	800073c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ffa9 	bl	8000204 <main>

080002b2 <LoopForever>:

LoopForever:
  b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80002c0:	08000874 	.word	0x08000874
  ldr r2, =_sbss
 80002c4:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80002c8:	200001b8 	.word	0x200001b8

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	460b      	mov	r3, r1
 80002da:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002dc:	78fb      	ldrb	r3, [r7, #3]
 80002de:	2b01      	cmp	r3, #1
 80002e0:	d156      	bne.n	8000390 <GPIO_PeriClockControl+0xc0>
	{
		if(pGPIOx == GPIOA)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a2d      	ldr	r2, [pc, #180]	@ (800039c <GPIO_PeriClockControl+0xcc>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002ea:	4b2d      	ldr	r3, [pc, #180]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ee:	4a2c      	ldr	r2, [pc, #176]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 80002f0:	f043 0301 	orr.w	r3, r3, #1
 80002f4:	6313      	str	r3, [r2, #48]	@ 0x30
	else
	{
		//TODO
	}

}
 80002f6:	e04b      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOB)
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a2a      	ldr	r2, [pc, #168]	@ (80003a4 <GPIO_PeriClockControl+0xd4>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000300:	4b27      	ldr	r3, [pc, #156]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000304:	4a26      	ldr	r2, [pc, #152]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000306:	f043 0302 	orr.w	r3, r3, #2
 800030a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800030c:	e040      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOC)
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a25      	ldr	r2, [pc, #148]	@ (80003a8 <GPIO_PeriClockControl+0xd8>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000316:	4b22      	ldr	r3, [pc, #136]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031a:	4a21      	ldr	r2, [pc, #132]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 800031c:	f043 0304 	orr.w	r3, r3, #4
 8000320:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000322:	e035      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOD)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a21      	ldr	r2, [pc, #132]	@ (80003ac <GPIO_PeriClockControl+0xdc>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800032c:	4b1c      	ldr	r3, [pc, #112]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000330:	4a1b      	ldr	r2, [pc, #108]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000332:	f043 0308 	orr.w	r3, r3, #8
 8000336:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000338:	e02a      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOE)
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a1c      	ldr	r2, [pc, #112]	@ (80003b0 <GPIO_PeriClockControl+0xe0>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000342:	4b17      	ldr	r3, [pc, #92]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000346:	4a16      	ldr	r2, [pc, #88]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000348:	f043 0310 	orr.w	r3, r3, #16
 800034c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034e:	e01f      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOF)
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a18      	ldr	r2, [pc, #96]	@ (80003b4 <GPIO_PeriClockControl+0xe4>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000358:	4b11      	ldr	r3, [pc, #68]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800035c:	4a10      	ldr	r2, [pc, #64]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 800035e:	f043 0320 	orr.w	r3, r3, #32
 8000362:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000364:	e014      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOG)
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a13      	ldr	r2, [pc, #76]	@ (80003b8 <GPIO_PeriClockControl+0xe8>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800036e:	4b0c      	ldr	r3, [pc, #48]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000372:	4a0b      	ldr	r2, [pc, #44]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000374:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000378:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037a:	e009      	b.n	8000390 <GPIO_PeriClockControl+0xc0>
		}else if (pGPIOx == GPIOH)
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a0f      	ldr	r2, [pc, #60]	@ (80003bc <GPIO_PeriClockControl+0xec>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d105      	bne.n	8000390 <GPIO_PeriClockControl+0xc0>
			GPIOH_PCLK_EN();
 8000384:	4b06      	ldr	r3, [pc, #24]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000388:	4a05      	ldr	r2, [pc, #20]	@ (80003a0 <GPIO_PeriClockControl+0xd0>)
 800038a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800038e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000390:	bf00      	nop
 8000392:	370c      	adds	r7, #12
 8000394:	46bd      	mov	sp, r7
 8000396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039a:	4770      	bx	lr
 800039c:	40020000 	.word	0x40020000
 80003a0:	40023800 	.word	0x40023800
 80003a4:	40020400 	.word	0x40020400
 80003a8:	40020800 	.word	0x40020800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40021000 	.word	0x40021000
 80003b4:	40021400 	.word	0x40021400
 80003b8:	40021800 	.word	0x40021800
 80003bc:	40021c00 	.word	0x40021c00

080003c0 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b086      	sub	sp, #24
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80003c8:	2300      	movs	r3, #0
 80003ca:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	2101      	movs	r1, #1
 80003d2:	4618      	mov	r0, r3
 80003d4:	f7ff ff7c 	bl	80002d0 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	2b03      	cmp	r3, #3
 80003de:	d820      	bhi.n	8000422 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	795b      	ldrb	r3, [r3, #5]
 80003e4:	461a      	mov	r2, r3
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	791b      	ldrb	r3, [r3, #4]
 80003ea:	005b      	lsls	r3, r3, #1
 80003ec:	fa02 f303 	lsl.w	r3, r2, r3
 80003f0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	681a      	ldr	r2, [r3, #0]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	791b      	ldrb	r3, [r3, #4]
 80003fc:	005b      	lsls	r3, r3, #1
 80003fe:	2103      	movs	r1, #3
 8000400:	fa01 f303 	lsl.w	r3, r1, r3
 8000404:	43db      	mvns	r3, r3
 8000406:	4619      	mov	r1, r3
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	400a      	ands	r2, r1
 800040e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6819      	ldr	r1, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	697a      	ldr	r2, [r7, #20]
 800041c:	430a      	orrs	r2, r1
 800041e:	601a      	str	r2, [r3, #0]
 8000420:	e0c1      	b.n	80005a6 <GPIO_Init+0x1e6>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	795b      	ldrb	r3, [r3, #5]
 8000426:	2b04      	cmp	r3, #4
 8000428:	d117      	bne.n	800045a <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042a:	4b47      	ldr	r3, [pc, #284]	@ (8000548 <GPIO_Init+0x188>)
 800042c:	68db      	ldr	r3, [r3, #12]
 800042e:	687a      	ldr	r2, [r7, #4]
 8000430:	7912      	ldrb	r2, [r2, #4]
 8000432:	4611      	mov	r1, r2
 8000434:	2201      	movs	r2, #1
 8000436:	408a      	lsls	r2, r1
 8000438:	4611      	mov	r1, r2
 800043a:	4a43      	ldr	r2, [pc, #268]	@ (8000548 <GPIO_Init+0x188>)
 800043c:	430b      	orrs	r3, r1
 800043e:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000440:	4b41      	ldr	r3, [pc, #260]	@ (8000548 <GPIO_Init+0x188>)
 8000442:	689b      	ldr	r3, [r3, #8]
 8000444:	687a      	ldr	r2, [r7, #4]
 8000446:	7912      	ldrb	r2, [r2, #4]
 8000448:	4611      	mov	r1, r2
 800044a:	2201      	movs	r2, #1
 800044c:	408a      	lsls	r2, r1
 800044e:	43d2      	mvns	r2, r2
 8000450:	4611      	mov	r1, r2
 8000452:	4a3d      	ldr	r2, [pc, #244]	@ (8000548 <GPIO_Init+0x188>)
 8000454:	400b      	ands	r3, r1
 8000456:	6093      	str	r3, [r2, #8]
 8000458:	e035      	b.n	80004c6 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	795b      	ldrb	r3, [r3, #5]
 800045e:	2b05      	cmp	r3, #5
 8000460:	d117      	bne.n	8000492 <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000462:	4b39      	ldr	r3, [pc, #228]	@ (8000548 <GPIO_Init+0x188>)
 8000464:	689b      	ldr	r3, [r3, #8]
 8000466:	687a      	ldr	r2, [r7, #4]
 8000468:	7912      	ldrb	r2, [r2, #4]
 800046a:	4611      	mov	r1, r2
 800046c:	2201      	movs	r2, #1
 800046e:	408a      	lsls	r2, r1
 8000470:	4611      	mov	r1, r2
 8000472:	4a35      	ldr	r2, [pc, #212]	@ (8000548 <GPIO_Init+0x188>)
 8000474:	430b      	orrs	r3, r1
 8000476:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000478:	4b33      	ldr	r3, [pc, #204]	@ (8000548 <GPIO_Init+0x188>)
 800047a:	68db      	ldr	r3, [r3, #12]
 800047c:	687a      	ldr	r2, [r7, #4]
 800047e:	7912      	ldrb	r2, [r2, #4]
 8000480:	4611      	mov	r1, r2
 8000482:	2201      	movs	r2, #1
 8000484:	408a      	lsls	r2, r1
 8000486:	43d2      	mvns	r2, r2
 8000488:	4611      	mov	r1, r2
 800048a:	4a2f      	ldr	r2, [pc, #188]	@ (8000548 <GPIO_Init+0x188>)
 800048c:	400b      	ands	r3, r1
 800048e:	60d3      	str	r3, [r2, #12]
 8000490:	e019      	b.n	80004c6 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	795b      	ldrb	r3, [r3, #5]
 8000496:	2b06      	cmp	r3, #6
 8000498:	d115      	bne.n	80004c6 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800049a:	4b2b      	ldr	r3, [pc, #172]	@ (8000548 <GPIO_Init+0x188>)
 800049c:	689b      	ldr	r3, [r3, #8]
 800049e:	687a      	ldr	r2, [r7, #4]
 80004a0:	7912      	ldrb	r2, [r2, #4]
 80004a2:	4611      	mov	r1, r2
 80004a4:	2201      	movs	r2, #1
 80004a6:	408a      	lsls	r2, r1
 80004a8:	4611      	mov	r1, r2
 80004aa:	4a27      	ldr	r2, [pc, #156]	@ (8000548 <GPIO_Init+0x188>)
 80004ac:	430b      	orrs	r3, r1
 80004ae:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	4b25      	ldr	r3, [pc, #148]	@ (8000548 <GPIO_Init+0x188>)
 80004b2:	68db      	ldr	r3, [r3, #12]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7912      	ldrb	r2, [r2, #4]
 80004b8:	4611      	mov	r1, r2
 80004ba:	2201      	movs	r2, #1
 80004bc:	408a      	lsls	r2, r1
 80004be:	4611      	mov	r1, r2
 80004c0:	4a21      	ldr	r2, [pc, #132]	@ (8000548 <GPIO_Init+0x188>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	089b      	lsrs	r3, r3, #2
 80004cc:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	f003 0303 	and.w	r3, r3, #3
 80004d6:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a1b      	ldr	r2, [pc, #108]	@ (800054c <GPIO_Init+0x18c>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d044      	beq.n	800056c <GPIO_Init+0x1ac>
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a1a      	ldr	r2, [pc, #104]	@ (8000550 <GPIO_Init+0x190>)
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d02b      	beq.n	8000544 <GPIO_Init+0x184>
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a18      	ldr	r2, [pc, #96]	@ (8000554 <GPIO_Init+0x194>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d024      	beq.n	8000540 <GPIO_Init+0x180>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a17      	ldr	r2, [pc, #92]	@ (8000558 <GPIO_Init+0x198>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d01d      	beq.n	800053c <GPIO_Init+0x17c>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a15      	ldr	r2, [pc, #84]	@ (800055c <GPIO_Init+0x19c>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d016      	beq.n	8000538 <GPIO_Init+0x178>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a14      	ldr	r2, [pc, #80]	@ (8000560 <GPIO_Init+0x1a0>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d00f      	beq.n	8000534 <GPIO_Init+0x174>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a12      	ldr	r2, [pc, #72]	@ (8000564 <GPIO_Init+0x1a4>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d008      	beq.n	8000530 <GPIO_Init+0x170>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a11      	ldr	r2, [pc, #68]	@ (8000568 <GPIO_Init+0x1a8>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d101      	bne.n	800052c <GPIO_Init+0x16c>
 8000528:	2307      	movs	r3, #7
 800052a:	e020      	b.n	800056e <GPIO_Init+0x1ae>
 800052c:	2300      	movs	r3, #0
 800052e:	e01e      	b.n	800056e <GPIO_Init+0x1ae>
 8000530:	2306      	movs	r3, #6
 8000532:	e01c      	b.n	800056e <GPIO_Init+0x1ae>
 8000534:	2305      	movs	r3, #5
 8000536:	e01a      	b.n	800056e <GPIO_Init+0x1ae>
 8000538:	2304      	movs	r3, #4
 800053a:	e018      	b.n	800056e <GPIO_Init+0x1ae>
 800053c:	2303      	movs	r3, #3
 800053e:	e016      	b.n	800056e <GPIO_Init+0x1ae>
 8000540:	2302      	movs	r3, #2
 8000542:	e014      	b.n	800056e <GPIO_Init+0x1ae>
 8000544:	2301      	movs	r3, #1
 8000546:	e012      	b.n	800056e <GPIO_Init+0x1ae>
 8000548:	40013c00 	.word	0x40013c00
 800054c:	40020000 	.word	0x40020000
 8000550:	40020400 	.word	0x40020400
 8000554:	40020800 	.word	0x40020800
 8000558:	40020c00 	.word	0x40020c00
 800055c:	40021000 	.word	0x40021000
 8000560:	40021400 	.word	0x40021400
 8000564:	40021800 	.word	0x40021800
 8000568:	40021c00 	.word	0x40021c00
 800056c:	2300      	movs	r3, #0
 800056e:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000570:	4b59      	ldr	r3, [pc, #356]	@ (80006d8 <GPIO_Init+0x318>)
 8000572:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000574:	4a58      	ldr	r2, [pc, #352]	@ (80006d8 <GPIO_Init+0x318>)
 8000576:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800057a:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 800057c:	7c7a      	ldrb	r2, [r7, #17]
 800057e:	7cbb      	ldrb	r3, [r7, #18]
 8000580:	009b      	lsls	r3, r3, #2
 8000582:	fa02 f103 	lsl.w	r1, r2, r3
 8000586:	4a55      	ldr	r2, [pc, #340]	@ (80006dc <GPIO_Init+0x31c>)
 8000588:	7cfb      	ldrb	r3, [r7, #19]
 800058a:	3302      	adds	r3, #2
 800058c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000590:	4b53      	ldr	r3, [pc, #332]	@ (80006e0 <GPIO_Init+0x320>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	687a      	ldr	r2, [r7, #4]
 8000596:	7912      	ldrb	r2, [r2, #4]
 8000598:	4611      	mov	r1, r2
 800059a:	2201      	movs	r2, #1
 800059c:	408a      	lsls	r2, r1
 800059e:	4611      	mov	r1, r2
 80005a0:	4a4f      	ldr	r2, [pc, #316]	@ (80006e0 <GPIO_Init+0x320>)
 80005a2:	430b      	orrs	r3, r1
 80005a4:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	799b      	ldrb	r3, [r3, #6]
 80005aa:	461a      	mov	r2, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	791b      	ldrb	r3, [r3, #4]
 80005b0:	005b      	lsls	r3, r3, #1
 80005b2:	fa02 f303 	lsl.w	r3, r2, r3
 80005b6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	689a      	ldr	r2, [r3, #8]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	005b      	lsls	r3, r3, #1
 80005c4:	2103      	movs	r1, #3
 80005c6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ca:	43db      	mvns	r3, r3
 80005cc:	4619      	mov	r1, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	400a      	ands	r2, r1
 80005d4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	6899      	ldr	r1, [r3, #8]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	430a      	orrs	r2, r1
 80005e4:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	79db      	ldrb	r3, [r3, #7]
 80005ea:	461a      	mov	r2, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	791b      	ldrb	r3, [r3, #4]
 80005f0:	005b      	lsls	r3, r3, #1
 80005f2:	fa02 f303 	lsl.w	r3, r2, r3
 80005f6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	68da      	ldr	r2, [r3, #12]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	791b      	ldrb	r3, [r3, #4]
 8000602:	005b      	lsls	r3, r3, #1
 8000604:	2103      	movs	r1, #3
 8000606:	fa01 f303 	lsl.w	r3, r1, r3
 800060a:	43db      	mvns	r3, r3
 800060c:	4619      	mov	r1, r3
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	400a      	ands	r2, r1
 8000614:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	68d9      	ldr	r1, [r3, #12]
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	697a      	ldr	r2, [r7, #20]
 8000622:	430a      	orrs	r2, r1
 8000624:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	7a1b      	ldrb	r3, [r3, #8]
 800062a:	461a      	mov	r2, r3
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	791b      	ldrb	r3, [r3, #4]
 8000630:	fa02 f303 	lsl.w	r3, r2, r3
 8000634:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	685a      	ldr	r2, [r3, #4]
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	791b      	ldrb	r3, [r3, #4]
 8000640:	4619      	mov	r1, r3
 8000642:	2301      	movs	r3, #1
 8000644:	408b      	lsls	r3, r1
 8000646:	43db      	mvns	r3, r3
 8000648:	4619      	mov	r1, r3
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	400a      	ands	r2, r1
 8000650:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	6859      	ldr	r1, [r3, #4]
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	697a      	ldr	r2, [r7, #20]
 800065e:	430a      	orrs	r2, r1
 8000660:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	795b      	ldrb	r3, [r3, #5]
 8000666:	2b02      	cmp	r3, #2
 8000668:	d131      	bne.n	80006ce <GPIO_Init+0x30e>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	791b      	ldrb	r3, [r3, #4]
 800066e:	08db      	lsrs	r3, r3, #3
 8000670:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	791b      	ldrb	r3, [r3, #4]
 8000676:	f003 0307 	and.w	r3, r3, #7
 800067a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	7c3a      	ldrb	r2, [r7, #16]
 8000682:	3208      	adds	r2, #8
 8000684:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000688:	7bfb      	ldrb	r3, [r7, #15]
 800068a:	009b      	lsls	r3, r3, #2
 800068c:	220f      	movs	r2, #15
 800068e:	fa02 f303 	lsl.w	r3, r2, r3
 8000692:	43db      	mvns	r3, r3
 8000694:	4618      	mov	r0, r3
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	7c3a      	ldrb	r2, [r7, #16]
 800069c:	4001      	ands	r1, r0
 800069e:	3208      	adds	r2, #8
 80006a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	7c3a      	ldrb	r2, [r7, #16]
 80006aa:	3208      	adds	r2, #8
 80006ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	7a5b      	ldrb	r3, [r3, #9]
 80006b4:	461a      	mov	r2, r3
 80006b6:	7bfb      	ldrb	r3, [r7, #15]
 80006b8:	009b      	lsls	r3, r3, #2
 80006ba:	fa02 f303 	lsl.w	r3, r2, r3
 80006be:	4618      	mov	r0, r3
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	7c3a      	ldrb	r2, [r7, #16]
 80006c6:	4301      	orrs	r1, r0
 80006c8:	3208      	adds	r2, #8
 80006ca:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80006ce:	bf00      	nop
 80006d0:	3718      	adds	r7, #24
 80006d2:	46bd      	mov	sp, r7
 80006d4:	bd80      	pop	{r7, pc}
 80006d6:	bf00      	nop
 80006d8:	40023800 	.word	0x40023800
 80006dc:	40013800 	.word	0x40013800
 80006e0:	40013c00 	.word	0x40013c00

080006e4 <GPIO_ReadFromInputPin>:
 *
 * @Note              -

 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006e4:	b480      	push	{r7}
 80006e6:	b085      	sub	sp, #20
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
 80006ec:	460b      	mov	r3, r1
 80006ee:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	691a      	ldr	r2, [r3, #16]
 80006f4:	78fb      	ldrb	r3, [r7, #3]
 80006f6:	fa22 f303 	lsr.w	r3, r2, r3
 80006fa:	b2db      	uxtb	r3, r3
 80006fc:	f003 0301 	and.w	r3, r3, #1
 8000700:	73fb      	strb	r3, [r7, #15]

   return value;
 8000702:	7bfb      	ldrb	r3, [r7, #15]
}
 8000704:	4618      	mov	r0, r3
 8000706:	3714      	adds	r7, #20
 8000708:	46bd      	mov	sp, r7
 800070a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070e:	4770      	bx	lr

08000710 <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000710:	b480      	push	{r7}
 8000712:	b083      	sub	sp, #12
 8000714:	af00      	add	r7, sp, #0
 8000716:	6078      	str	r0, [r7, #4]
 8000718:	460b      	mov	r3, r1
 800071a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	695b      	ldr	r3, [r3, #20]
 8000720:	78fa      	ldrb	r2, [r7, #3]
 8000722:	2101      	movs	r1, #1
 8000724:	fa01 f202 	lsl.w	r2, r1, r2
 8000728:	405a      	eors	r2, r3
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	615a      	str	r2, [r3, #20]
}
 800072e:	bf00      	nop
 8000730:	370c      	adds	r7, #12
 8000732:	46bd      	mov	sp, r7
 8000734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000738:	4770      	bx	lr
	...

0800073c <__libc_init_array>:
 800073c:	b570      	push	{r4, r5, r6, lr}
 800073e:	4d0d      	ldr	r5, [pc, #52]	@ (8000774 <__libc_init_array+0x38>)
 8000740:	4c0d      	ldr	r4, [pc, #52]	@ (8000778 <__libc_init_array+0x3c>)
 8000742:	1b64      	subs	r4, r4, r5
 8000744:	10a4      	asrs	r4, r4, #2
 8000746:	2600      	movs	r6, #0
 8000748:	42a6      	cmp	r6, r4
 800074a:	d109      	bne.n	8000760 <__libc_init_array+0x24>
 800074c:	4d0b      	ldr	r5, [pc, #44]	@ (800077c <__libc_init_array+0x40>)
 800074e:	4c0c      	ldr	r4, [pc, #48]	@ (8000780 <__libc_init_array+0x44>)
 8000750:	f000 f87e 	bl	8000850 <_init>
 8000754:	1b64      	subs	r4, r4, r5
 8000756:	10a4      	asrs	r4, r4, #2
 8000758:	2600      	movs	r6, #0
 800075a:	42a6      	cmp	r6, r4
 800075c:	d105      	bne.n	800076a <__libc_init_array+0x2e>
 800075e:	bd70      	pop	{r4, r5, r6, pc}
 8000760:	f855 3b04 	ldr.w	r3, [r5], #4
 8000764:	4798      	blx	r3
 8000766:	3601      	adds	r6, #1
 8000768:	e7ee      	b.n	8000748 <__libc_init_array+0xc>
 800076a:	f855 3b04 	ldr.w	r3, [r5], #4
 800076e:	4798      	blx	r3
 8000770:	3601      	adds	r6, #1
 8000772:	e7f2      	b.n	800075a <__libc_init_array+0x1e>
 8000774:	08000868 	.word	0x08000868
 8000778:	08000868 	.word	0x08000868
 800077c:	08000868 	.word	0x08000868
 8000780:	08000870 	.word	0x08000870

08000784 <__retarget_lock_acquire_recursive>:
 8000784:	4770      	bx	lr

08000786 <__retarget_lock_release_recursive>:
 8000786:	4770      	bx	lr

08000788 <register_fini>:
 8000788:	4b02      	ldr	r3, [pc, #8]	@ (8000794 <register_fini+0xc>)
 800078a:	b113      	cbz	r3, 8000792 <register_fini+0xa>
 800078c:	4802      	ldr	r0, [pc, #8]	@ (8000798 <register_fini+0x10>)
 800078e:	f000 b805 	b.w	800079c <atexit>
 8000792:	4770      	bx	lr
 8000794:	00000000 	.word	0x00000000
 8000798:	080007a9 	.word	0x080007a9

0800079c <atexit>:
 800079c:	2300      	movs	r3, #0
 800079e:	4601      	mov	r1, r0
 80007a0:	461a      	mov	r2, r3
 80007a2:	4618      	mov	r0, r3
 80007a4:	f000 b814 	b.w	80007d0 <__register_exitproc>

080007a8 <__libc_fini_array>:
 80007a8:	b538      	push	{r3, r4, r5, lr}
 80007aa:	4d07      	ldr	r5, [pc, #28]	@ (80007c8 <__libc_fini_array+0x20>)
 80007ac:	4c07      	ldr	r4, [pc, #28]	@ (80007cc <__libc_fini_array+0x24>)
 80007ae:	1b64      	subs	r4, r4, r5
 80007b0:	10a4      	asrs	r4, r4, #2
 80007b2:	b91c      	cbnz	r4, 80007bc <__libc_fini_array+0x14>
 80007b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007b8:	f000 b850 	b.w	800085c <_fini>
 80007bc:	3c01      	subs	r4, #1
 80007be:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80007c2:	4798      	blx	r3
 80007c4:	e7f5      	b.n	80007b2 <__libc_fini_array+0xa>
 80007c6:	bf00      	nop
 80007c8:	08000870 	.word	0x08000870
 80007cc:	08000874 	.word	0x08000874

080007d0 <__register_exitproc>:
 80007d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007d4:	f8df a074 	ldr.w	sl, [pc, #116]	@ 800084c <__register_exitproc+0x7c>
 80007d8:	4606      	mov	r6, r0
 80007da:	f8da 0000 	ldr.w	r0, [sl]
 80007de:	4698      	mov	r8, r3
 80007e0:	460f      	mov	r7, r1
 80007e2:	4691      	mov	r9, r2
 80007e4:	f7ff ffce 	bl	8000784 <__retarget_lock_acquire_recursive>
 80007e8:	4b16      	ldr	r3, [pc, #88]	@ (8000844 <__register_exitproc+0x74>)
 80007ea:	681c      	ldr	r4, [r3, #0]
 80007ec:	b90c      	cbnz	r4, 80007f2 <__register_exitproc+0x22>
 80007ee:	4c16      	ldr	r4, [pc, #88]	@ (8000848 <__register_exitproc+0x78>)
 80007f0:	601c      	str	r4, [r3, #0]
 80007f2:	6865      	ldr	r5, [r4, #4]
 80007f4:	f8da 0000 	ldr.w	r0, [sl]
 80007f8:	2d1f      	cmp	r5, #31
 80007fa:	dd05      	ble.n	8000808 <__register_exitproc+0x38>
 80007fc:	f7ff ffc3 	bl	8000786 <__retarget_lock_release_recursive>
 8000800:	f04f 30ff 	mov.w	r0, #4294967295
 8000804:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000808:	b19e      	cbz	r6, 8000832 <__register_exitproc+0x62>
 800080a:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 800080e:	2201      	movs	r2, #1
 8000810:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 8000814:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 8000818:	40aa      	lsls	r2, r5
 800081a:	4313      	orrs	r3, r2
 800081c:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 8000820:	2e02      	cmp	r6, #2
 8000822:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 8000826:	bf02      	ittt	eq
 8000828:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 800082c:	4313      	orreq	r3, r2
 800082e:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 8000832:	1c6b      	adds	r3, r5, #1
 8000834:	3502      	adds	r5, #2
 8000836:	6063      	str	r3, [r4, #4]
 8000838:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 800083c:	f7ff ffa3 	bl	8000786 <__retarget_lock_release_recursive>
 8000840:	2000      	movs	r0, #0
 8000842:	e7df      	b.n	8000804 <__register_exitproc+0x34>
 8000844:	20000024 	.word	0x20000024
 8000848:	20000028 	.word	0x20000028
 800084c:	20000000 	.word	0x20000000

08000850 <_init>:
 8000850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000852:	bf00      	nop
 8000854:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000856:	bc08      	pop	{r3}
 8000858:	469e      	mov	lr, r3
 800085a:	4770      	bx	lr

0800085c <_fini>:
 800085c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800085e:	bf00      	nop
 8000860:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000862:	bc08      	pop	{r3}
 8000864:	469e      	mov	lr, r3
 8000866:	4770      	bx	lr
